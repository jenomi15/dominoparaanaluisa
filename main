#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <stdbool.h>

#define TOTAL_PECAS 28
#define PECAS_POR_JOGADOR 21
#define TAMANHO_MAX_MESA 27
int pecasNaoDistribuidas[TOTAL_PECAS - 14][2];
int indexpecasnaodistribuidas = 14;
int jogador1[PECAS_POR_JOGADOR][2];
int indexJogador1 = 7;
int indexJogador2 = 7;
int jogador2[PECAS_POR_JOGADOR][2];
int ladoesquerdo[TAMANHO_MAX_MESA][2];
int ladodireito[TAMANHO_MAX_MESA][2];
int quantidadedireita = 1;
int quantidadeesquerda = 1;
int turno;
int quantidade;
int escolha1[2];
int escolha2[2];
int opcao;

void printVitoria(int jogador)
{
    printf("\n--------VITÓRIA--------\n\n---Jogador %d ganhou----\n", jogador);
    printf("\n\n---------------------------\n>>>>>>> FIM DE JOGO <<<<<<<\n---------------------------\n\n.....retornando ao menu.....");
    exit(0);
}

void salvarjogo1()
{
    FILE *pecasNaoDistribuidasTxt, *indexpecasnaodistribuidasTxt, *jogador1Txt, *indexJogador1Txt, *ladoesquerdoTxt, *
            quantidadeesquerdaTxt, *jogador2Txt, *indexJogador2Txt, *ladodireitoTxt, *quantidadedireitaTxt, *turnoTxt;


    pecasNaoDistribuidasTxt = fopen("./pecasNaoDistribuidas.txt", "wb");
    indexpecasnaodistribuidasTxt = fopen("./indexpecasnaodistribuidas.txt", "wb");
    jogador1Txt = fopen("./jogador1.txt", "wb");
    indexJogador1Txt = fopen("./indexJogador1.txt", "wb");
    ladoesquerdoTxt = fopen("./ladoesquerdo.txt", "wb");
    quantidadeesquerdaTxt = fopen("./quantidadeesquerda.txt", "wb");
    jogador2Txt = fopen("./jogador2.txt", "wb");
    indexJogador2Txt = fopen("./indexJogador2.txt", "wb");
    ladodireitoTxt = fopen("./ladodireito.txt", "wb");
    quantidadedireitaTxt = fopen("./quantidadedireita.txt", "wb");
    turnoTxt = fopen("./turno.txt","wb");



    if (pecasNaoDistribuidasTxt == NULL || indexpecasnaodistribuidasTxt == NULL || jogador1Txt == NULL ||
        indexJogador1Txt == NULL || ladoesquerdoTxt == NULL || quantidadeesquerdaTxt == NULL ||
        jogador2Txt == NULL || indexJogador2Txt == NULL || ladodireitoTxt == NULL || quantidadedireitaTxt == NULL ||
        turnoTxt == NULL)
    {
        printf("Erro em abrir os arquivos.\n");
        return;
    }


    fwrite(&quantidadedireita, sizeof(int), 1, quantidadedireitaTxt);
    fwrite(&indexJogador2, sizeof(int), 1, indexJogador2Txt);
    fwrite(&quantidadeesquerda, sizeof(int), 1, quantidadeesquerdaTxt);
    fwrite(&indexJogador1, sizeof(int), 1, indexJogador1Txt);
    fwrite(&indexpecasnaodistribuidas, sizeof(int), 1, indexpecasnaodistribuidasTxt);
    fwrite(ladodireito, sizeof(int), 27 * 2, ladodireitoTxt);
    fwrite(jogador2, sizeof(int), 21 * 2, jogador2Txt);
    fwrite(ladoesquerdo, sizeof(int), 27 * 2, ladoesquerdoTxt);
    fwrite(jogador1, sizeof(int), 21 * 2, jogador1Txt);
    fwrite(pecasNaoDistribuidas, sizeof(int), 14 * 2, pecasNaoDistribuidasTxt);
    fwrite(&turno, sizeof(int), 1, turnoTxt);


    fclose(pecasNaoDistribuidasTxt);
    fclose(indexpecasnaodistribuidasTxt);
    fclose(jogador1Txt);
    fclose(indexJogador1Txt);
    fclose(ladoesquerdoTxt);
    fclose(quantidadeesquerdaTxt);
    fclose(jogador2Txt);
    fclose(indexJogador2Txt);
    fclose(ladodireitoTxt);
    fclose(quantidadedireitaTxt);
    fclose(turnoTxt);
}

void carregarjogo1()
{
    FILE *pecasNaoDistribuidasTxt, *indexpecasnaodistribuidasTxt, *jogador1Txt, *indexJogador1Txt, *ladoesquerdoTxt, *
            quantidadeesquerdaTxt, *jogador2Txt, *indexJogador2Txt, *ladodireitoTxt, *quantidadedireitaTxt, *turnoTxt;


    pecasNaoDistribuidasTxt = fopen("./pecasNaoDistribuidas.txt", "rb");
    indexpecasnaodistribuidasTxt = fopen("./indexpecasnaodistribuidas.txt", "rb");
    jogador1Txt = fopen("./jogador1.txt", "rb");
    indexJogador1Txt = fopen("./indexJogador1.txt", "rb");
    ladoesquerdoTxt = fopen("./ladoesquerdo.txt", "rb");
    quantidadeesquerdaTxt = fopen("./quantidadeesquerda.txt", "rb");
    jogador2Txt = fopen("./jogador2.txt", "rb");
    indexJogador2Txt = fopen("./indexJogador2.txt", "rb");
    ladodireitoTxt = fopen("./ladodireito.txt", "rb");
    quantidadedireitaTxt = fopen("./quantidadedireita.txt", "rb");
    turnoTxt = fopen("./turno.txt", "rb");


    if (pecasNaoDistribuidasTxt == NULL || indexpecasnaodistribuidasTxt == NULL || jogador1Txt == NULL ||
        indexJogador1Txt == NULL || ladoesquerdoTxt == NULL || quantidadeesquerdaTxt == NULL ||
        jogador2Txt == NULL || indexJogador2Txt == NULL || ladodireitoTxt == NULL || quantidadedireitaTxt == NULL ||
        turnoTxt == NULL)
    {
        printf("Erro em abrir os arquivos.\n");
        return;
    }


    fread(&quantidadedireita, sizeof(int), 1, quantidadedireitaTxt);
    fread(&indexJogador2, sizeof(int), 1, indexJogador2Txt);
    fread(&quantidadeesquerda, sizeof(int), 1, quantidadeesquerdaTxt);
    fread(&indexJogador1, sizeof(int), 1, indexJogador1Txt);
    fread(&indexpecasnaodistribuidas, sizeof(int), 1, indexpecasnaodistribuidasTxt);
    fread(ladodireito, sizeof(int), 27 * 2, ladodireitoTxt);
    fread(jogador2, sizeof(int), 21 * 2, jogador2Txt);
    fread(ladoesquerdo, sizeof(int), 27 * 2, ladoesquerdoTxt);
    fread(jogador1, sizeof(int), 21 * 2, jogador1Txt);
    fread(pecasNaoDistribuidas, sizeof(int), 14 * 2, pecasNaoDistribuidasTxt);
    fread(&turno, sizeof(int), 1, turnoTxt);


    fclose(pecasNaoDistribuidasTxt);
    fclose(indexpecasnaodistribuidasTxt);
    fclose(jogador1Txt);
    fclose(indexJogador1Txt);
    fclose(ladoesquerdoTxt);
    fclose(quantidadeesquerdaTxt);
    fclose(jogador2Txt);
    fclose(indexJogador2Txt);
    fclose(ladodireitoTxt);
    fclose(quantidadedireitaTxt);
    fclose(turnoTxt);
}

void removerpeca1(int jogador[][2], int indexJogador1, int* peca_escolhida1)
{
    for (int i = 0; i <= indexJogador1; i++)
    {
        if (jogador[i][0] == peca_escolhida1[0] && jogador[i][1] == peca_escolhida1[1] || jogador[i][0] ==
                                                                                          peca_escolhida1[1] && jogador[i][1] == peca_escolhida1[0])
        {
            // Remover a peça do jogador
            for (int j = i; j < indexJogador1; j++)
            {
                jogador[j][0] = jogador[j + 1][0];
                jogador[j][1] = jogador[j + 1][1];
            }
        }
    }
}

void removerpeca2(int jogador[][2], int indexJogador2, int* peca_escolhida2)
{
    for (int i = 0; i <= indexJogador2; i++)
    {
        if (jogador[i][0] == peca_escolhida2[0] && jogador[i][1] == peca_escolhida2[1] || jogador[i][0] ==
                                                                                          peca_escolhida2[1] && jogador[i][1] == peca_escolhida2[0])
        {
            // Remover a peça do jogador
            for (int j = i; j < indexJogador2; j++)
            {
                jogador[j][0] = jogador[j + 1][0];
                jogador[j][1] = jogador[j + 1][1];
            }
        }
    }
}

int validarEscolha1(int* escolha1, int jogador[][2], int index)
{
    for (int i = 0; i <= index; i++)
    {
        if (jogador[i][0] == escolha1[0] && jogador[i][1] == escolha1[1])
        {
            return 1; // Escolha válida
        }
    }
    return 0; // Escolha inválida
}

void imprimirPecas(int jogador[][2], int quantidade, const char* jogadorNome)
{
    printf("%s: ", jogadorNome);
    for (int i = 0; i < quantidade; i++)
    {
        printf("[%d|%d] ", jogador[i][0], jogador[i][1]);
    }
    printf("\n");
}

int validarEscolha2(int* escolha2, int jogador[][2], int index)
{
    for (int i = 0; i <= index; i++)
    {
        if (jogador[i][0] == escolha2[0] && jogador[i][1] == escolha2[1])
        {
            return 1; // Escolha válida
        }
    }
    return 0; // Escolha inválida
}

void comprarPeca(int pecasNaoDistribuidas[][2], int* indexPecasNaoDistribuidas, int jogador[][2], int* indexJogador)
{
    if (*indexPecasNaoDistribuidas > 0)
    {
        // Adicionar uma peça do topo das peças não distribuídas à mão do jogador
        jogador[*indexJogador][0] = pecasNaoDistribuidas[*indexPecasNaoDistribuidas - 1][0];
        jogador[*indexJogador][1] = pecasNaoDistribuidas[*indexPecasNaoDistribuidas - 1][1];

        // Remover a peça da pilha de peças não distribuídas
        (*indexPecasNaoDistribuidas)--;

        // Atualizar o índice do jogador
        (*indexJogador)++;
    }
    else
    {
        printf("Não há mais peças disponíveis para compra.\n\n");
    }
}

bool comparacaoesquerda(int ladoesquerdo[TAMANHO_MAX_MESA][2], int quantidadeesquerda, int* peca_escolhida)
{
    if (ladoesquerdo[quantidadeesquerda - 1][0] == peca_escolhida[0] && ladoesquerdo[quantidadeesquerda - 1][1] ==
                                                                        peca_escolhida[1])
    {
        // talvez na0 prcise do -1
        // Ambos os lados da peça escolhida são iguais aos da peça da mesa
        return true;
    }

    if (ladoesquerdo[quantidadeesquerda - 1][0] == peca_escolhida[1])
    {
        return true;
    }
    else if (ladoesquerdo[quantidadeesquerda - 1][0] == peca_escolhida[0])
    {
        int temp = peca_escolhida[1];
        peca_escolhida[1] = peca_escolhida[0];
        peca_escolhida[0] = temp;
        return true;
    }
    else
    {
        return false;
    }
}

bool comparacaodireita(int ladodireito[TAMANHO_MAX_MESA][2], int quantidadedireita, int* peca_escolhida)
{
    if (ladodireito[quantidadedireita - 1][1] == peca_escolhida[0] && ladodireito[quantidadedireita - 1][0] ==
                                                                      peca_escolhida[1])
    {
        // Ambos os lados da peça escolhida são iguais aos da peça da mesa
        return true;
    }
    else if (ladodireito[quantidadedireita - 1][1] == peca_escolhida[0])
    {
        return true;
    }
    else if (ladodireito[quantidadedireita - 1][1] == peca_escolhida[1])
    {
        int temp = peca_escolhida[1];
        peca_escolhida[1] = peca_escolhida[0];
        peca_escolhida[0] = temp;
        return true;
    }
    else
    {
        return false;
    }
}

int imprimiraspecasdamesaesquerda(int ladoesquerdo[][2], int quantidadeesquerda)
{
    printf("MESA LADO ESQUERDO:\n");
    // Imprimir a primeira peça pela metade
    if (quantidadeesquerda == 1)
    {
        printf("   [    | %d ]", ladoesquerdo[0][0]);
    }
    else
    {
        printf("   [%d]", ladoesquerdo[0][0]);
        // Imprimir as demais peças por completo
        for (int i = 1; i < quantidadeesquerda; i++)
        {
            printf("   [%d | %d]", ladoesquerdo[i][1], ladoesquerdo[i][0]);
        }
    }
    printf("\n");
    return 0;
}

int imprimiraspecasdamesadireita(int ladodireito[][2], int quantidadedireita)
{
    printf("MESA LADO DIREITO:\n");

    // Imprimir a primeira peça pela metade
    if (quantidadedireita == 1)
    {
        printf("   [    | %d ]", ladodireito[0][1]);
    }
    else
    {
        printf("   [%d]", ladodireito[0][1]);
        // Imprimir as demais peças por completo
        for (int i = 1; i < quantidadedireita; i++)
        {
            printf("   [%d | %d]", ladodireito[i][0], ladodireito[i][1]);
        }
    }
    printf("\n");
    return 0;
}


void criarDomino(int dominos[][2])
{
    int index = 0;
    for (int i = 0; i <= 6; i++)
    {
        for (int j = i; j <= 6; j++)
        {
            dominos[index][0] = i;
            dominos[index][1] = j;
            index++;
        }
    }
}

void embaralharDomino(int dominos[][2])
{
    srand(time(NULL));
    for (int i = TOTAL_PECAS - 1; i > 0; i--)
    {
        int j = rand() % (i + 1);
        int temp0 = dominos[i][0];
        int temp1 = dominos[i][1];
        dominos[i][0] = dominos[j][0];
        dominos[i][1] = dominos[j][1];
        dominos[j][0] = temp0;
        dominos[j][1] = temp1;
    }
}

void distribuirDomino(int dominos[][2], int jogador1[][2], int jogador2[][2], int pecasNaoDistribuidas[][2])
{
    int indexJogador1 = 0;
    int indexJogador2 = 0;
    int indexPecasNaoDistribuidas = 0;

    for (int i = 0; i < TOTAL_PECAS; i++)
    {
        if (i < 7)
        {
            jogador1[indexJogador1][0] = dominos[i][0];
            jogador1[indexJogador1][1] = dominos[i][1];
            indexJogador1++;
        }
        else if (i < 14)
        {
            jogador2[indexJogador2][0] = dominos[i][0];
            jogador2[indexJogador2][1] = dominos[i][1];
            indexJogador2++;
        }
        else
        {
            pecasNaoDistribuidas[indexPecasNaoDistribuidas][0] = dominos[i][0];
            pecasNaoDistribuidas[indexPecasNaoDistribuidas][1] = dominos[i][1];
            indexPecasNaoDistribuidas++;
        }
    }
}


int calcularMaiorDupla(int player[][2], int tamanho)
{
    int maiorDupla = -1;
    for (int i = 0; i < tamanho; i++)
    {
        if (player[i][0] == player[i][1])
        {
            int dupla = player[i][0] + player[i][1];
            if (dupla > maiorDupla)
            {
                maiorDupla = dupla;
            }
        }
    }

    return maiorDupla;
}

int calcularMaiorPeca(int player[][2], int tamanho)
{
    int maiorSomaLados = -1;

    for (int i = 0; i < tamanho; i++)
    {
        int somaLados = player[i][0] + player[i][1];
        if (somaLados > maiorSomaLados)
        {
            maiorSomaLados = somaLados;
        }
    }

    return maiorSomaLados;
}

int main()
{
    int i;
    printf("BEM VINDO AO JOGO DE DOMINO!!! \n\n ");
    printf("SELECIONE O MODO DE JOGO :\n\n");
    printf("1. COMEÇE UM NOVO JOGO.\n 2. CONTINUE O JOGO ANTERIOR.\n ");
    scanf("%d", &i);
    if (i != 1 && i != 2)
    {
        while (i != 1 && i != 2)
        {
            printf("OPÇÃO INVÁLIDA , DIGITE O MODO DE JOGO NOVAMENTE !! \n\n ");
            scanf("%d", &i);
        }
    }
    if (i == 1)
    {
        int mesa[TAMANHO_MAX_MESA][2];
        int jogada; //esqueci pq fiz mas uma hora acho a utilidade dessa variavel
        int peca_escolhida1[2]; //bem autoesplicativo
        int peca_escolhida2[2];
        int j1; //quantidade de peças do jogador 1 após alteraçoes
        int j2; //quantidade de peças do jogador 2 após alteraçoes
        int dominos[TOTAL_PECAS][2];





        int salvamento ;

        int decisao;
        int quantidade = 7;
        int pecadesejada[1][2];
        int escolha1[2];
        int escolha2[2];

        int compradepeca = 1;
        criarDomino(dominos);
        embaralharDomino(dominos);
        distribuirDomino(dominos, jogador1, jogador2, pecasNaoDistribuidas);



        int maiorDuplaPlayer1 = calcularMaiorDupla(jogador1, 7);
        int maiorDuplaPlayer2 = calcularMaiorDupla(jogador2, 7);

        printf("Soma das duplas do jogador 1: %d\n", maiorDuplaPlayer1);
        printf("Soma das duplas do jogador 2: %d\n\n", maiorDuplaPlayer2);

        int maiorPecaPlayer1 = calcularMaiorPeca(jogador1, 7);
        int maiorPecaPlayer2 = calcularMaiorPeca(jogador2, 7);
        printf("Maior peça do jogador 1: %d\n", maiorPecaPlayer1);
        printf("Maior peça do jogador 2: %d\n\n", maiorPecaPlayer2);

        int primeiroJogador;
        if (maiorDuplaPlayer1 > maiorDuplaPlayer2)
        {
            printf("O jogador 1 tem a maior soma de duplas, então ele começa o jogo.\n\n");
            primeiroJogador = 1;
        }
        else if (maiorDuplaPlayer1 < maiorDuplaPlayer2)
        {
            printf("O jogador 2 tem a maior soma de duplas, então ele começa o jogo.\n\n");
            primeiroJogador = 2;
        }
        else
        {
            printf("Ambos os jogadores têm a mesma soma de duplas. Vamos verificar a maior peça.\n\n");
            if (maiorPecaPlayer1 > maiorPecaPlayer2)
            {
                printf("O jogador 1 tem a maior peça, então ele começa o jogo.\n\n");
                primeiroJogador = 1;
            }
            else if (maiorPecaPlayer1 < maiorPecaPlayer2)
            {
                printf("O jogador 2 tem a maior peça, então ele começa o jogo.\n\n");
                primeiroJogador = 2;
            }
            else
            {
                printf("Ambos os jogadores têm a mesma maior peça. Vamos decidir por ímpar ou par!!\n\n");

                int numeroPlayer1, numeroPlayer2;
                int somaDosNumeros;

                printf("Jogador 1, digite um número de 0 a 9: \n");
                scanf("%d", &numeroPlayer1);

                printf("Jogador 2, digite um número de 0 a 9: \n");
                scanf("%d", &numeroPlayer2);

                somaDosNumeros = numeroPlayer1 + numeroPlayer2;

                if (somaDosNumeros % 2 == 0)
                {
                    printf("A soma dos números é par. O jogador 1 começa.\n");
                    primeiroJogador = 1;
                }
                else
                {
                    printf("A soma dos números é ímpar. O jogador 2 começa.\n");
                    primeiroJogador = 2;
                }
            }
        }

        printf("\n\n\n\n\n");

        if (primeiroJogador == 2)
        {
            printf (" JOGADOR 2 , VOÇE COMEÇA!!\n\n");
            do
            {
                printf("Digite os valores da peça desejada :\n\n");
                imprimirPecas(jogador2, indexJogador2, "jogador2");
                scanf("%d %d", &escolha2[0], &escolha2[1]);
            }
            while (!validarEscolha2(escolha2, jogador2, indexJogador2));
            peca_escolhida2[0] = escolha2[0];
            peca_escolhida2[1] = escolha2[1];
            printf("[ %d | %d ]", peca_escolhida2[0], peca_escolhida2[1]);
            ladoesquerdo[0][0] = peca_escolhida2[0];
            ladodireito[0][1] = peca_escolhida2[1];
            removerpeca2(jogador2, indexJogador2, peca_escolhida2);
            indexJogador2 -- ;


            do
            {

                turnojogador1 :
                printf("\n\nRODADA DO JOGADOR 1 : \n\n");
                imprimirPecas(jogador1, indexJogador1, "jogador1");
                imprimiraspecasdamesaesquerda(ladoesquerdo, quantidadeesquerda);
                imprimiraspecasdamesadireita(ladodireito, quantidadedireita);
                printf("\n\npeças na mao do oponente: %d \n\n", indexJogador2);
                while (opcao != 1 && opcao != 2)
                {
                    printf("\n digite 1 para jogar uma peça: \n digite 2 para salvar: \n ");
                    scanf("%d", &opcao);
                }
                switch (opcao)
                {
                    case 1:
                        // j+1 vai virar o index do jogador do looping  , ex : esse looping agr he do jogador 1 = indexjogador1**


                        do
                        {
                            printf("Digite os valores da peça desejada :\n\n");
                            imprimirPecas(jogador1, indexJogador1, "jogador1");
                            scanf("%d %d", &escolha1[0], &escolha1[1]);
                        }
                        while (!validarEscolha1(escolha1, jogador1, indexJogador1));
                        peca_escolhida1[0] = escolha1[0];
                        peca_escolhida1[1] = escolha1[1];
                        printf("[ %d | %d ]", peca_escolhida1[0], peca_escolhida1[1]);

                        if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1) && comparacaodireita(
                                ladodireito, quantidadedireita, peca_escolhida1))
                        {
                            printf(
                                    "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                            scanf("%d", &decisao);

                            if (decisao != 1 && decisao != 2)
                            {
                                while (decisao != 1 && decisao != 2)
                                {
                                    printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n \n ");
                                    scanf("%d", &decisao);
                                }
                            }

                            if (decisao == 2)
                            {
                                printf("a peça foi adicionada no lado esquerdo \n\n");
                                quantidadeesquerda++;
                                ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[1];
                                ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[0];
                                removerpeca1(jogador1, indexJogador1, peca_escolhida1);
                                indexJogador1 = indexJogador1 - 1;
                                if(indexJogador1 == 0)
                                {
                                    printVitoria(1);
                                }

                            }
                            else if (decisao == 1)
                            {
                                quantidadedireita++;
                                ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                indexJogador1 = indexJogador1 - 1;
                                if(indexJogador1 == 0)
                                {
                                    printVitoria(1);
                                }
                            }
                        }
                        else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1))
                        {
                            printf("a peça foi adicionada no lado esquerdo \n\n");
                            quantidadeesquerda++;
                            ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[0];
                            ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[1];
                            removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                            indexJogador1 = indexJogador1 - 1;
                            if(indexJogador1 == 0)
                            {
                                printVitoria(1);
                            }
                        }
                        else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                        {
                            printf("a peça foi adicionada no lado direito \n\n");

                            quantidadedireita++;
                            ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                            ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                            removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                            indexJogador1 = indexJogador1 - 1;
                            if(indexJogador1 == 0)
                            {
                                printVitoria(1);
                            }
                        }
                        else
                        {
                            do
                            {
                                printf("essa peça nao encaixa em nenhum lado , compre uma da pilha .\n");
                                comprarPeca(pecasNaoDistribuidas, &indexpecasnaodistribuidas, jogador1, &indexJogador1);
                                imprimirPecas(jogador1, indexJogador1, "Jogador1");
                                do
                                {
                                    printf("Digite os valores da peça desejada :\n");
                                    imprimirPecas(jogador1, indexJogador1, "jogador1");
                                    scanf("%d %d", &escolha1[0], &escolha1[1]);
                                }
                                while (!validarEscolha1(escolha1, jogador1, indexJogador1));
                                peca_escolhida1[0] = escolha1[0];
                                peca_escolhida1[1] = escolha1[1];
                                printf("[ %d | %d ]", peca_escolhida1[0], peca_escolhida1[1]);

                                if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1) &&
                                    comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                                {
                                    printf(
                                            "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                                    scanf("%d", &decisao);
                                    if (decisao != 1 && decisao != 2)
                                    {
                                        while (decisao != 1 && decisao != 2)
                                        {
                                            printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n");
                                            scanf("%d", &decisao);
                                        }
                                    }
                                    if (decisao == 2)
                                    {
                                        printf("a peça foi adicionada no lado esquerdo \n\n");
                                        quantidadeesquerda++;
                                        ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[1];
                                        ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[0];
                                        removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                        indexJogador1 = indexJogador1 - 1;
                                        compradepeca = 0;
                                        if(indexJogador1 == 0)
                                        {
                                            printVitoria(1);
                                        }
                                    }
                                    if (decisao == 1)
                                    {
                                        printf("a peça foi adicionada no lado direito \n\n");
                                        quantidadedireita++;
                                        ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                        ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                        removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                        indexJogador1 = indexJogador1 - 1;
                                        compradepeca = 0;
                                        if(indexJogador1 == 0)
                                        {
                                            printVitoria(1);
                                        }
                                    }
                                }
                                else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1))
                                {
                                    printf("a peça foi adicionada no lado esquerdo \n\n");
                                    quantidadeesquerda++;
                                    ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[0];
                                    ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[1];
                                    removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                    indexJogador1 = indexJogador1 - 1;
                                    compradepeca = 0;
                                    if(indexJogador1 == 0)
                                    {
                                        printVitoria(1);
                                    }
                                }
                                else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                                {
                                    printf("a peça foi adicionada no lado direito \n\n");
                                    quantidadedireita++;
                                    ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                    ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                    removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                    indexJogador1 = indexJogador1 - 1;
                                    compradepeca = 0;
                                    if(indexJogador1 == 0)
                                    {
                                        printVitoria(1);
                                    }
                                }
                                else
                                {
                                    printf("infelizmente sua peça nao encaixa em nenhum canto , compre outra.\n \n");
                                }
                            }
                            while (compradepeca != 0 && indexpecasnaodistribuidas != 0);
                        }
                        printf(" digite 1 para continuar o jogo e 2 para salvar \n\n ");
                        scanf("%d" , &salvamento);
                        while ( salvamento != 1 && salvamento != 2) {
                            printf("valor inadequado  , digite de novo");
                            scanf("%d", &salvamento);
                        }
                        if (salvamento == 2) {
                            turno = 1;
                            salvarjogo1();
                            exit(0);
                        }

                        break;


                    case 2:
                        turno = 1;
                        salvarjogo1();
                        exit(0);
                }

                printf("RODADA DO JOGADOR 2 \n\n\n");


                imprimirPecas(jogador2, indexJogador2, "Jogador 2");
                imprimiraspecasdamesaesquerda(ladoesquerdo, quantidadeesquerda);
                imprimiraspecasdamesadireita(ladodireito, quantidadedireita);
                printf("\n\npeças na mao do oponente: %d \n\n", indexJogador1);
                while (opcao != 1 && opcao != 2)
                {
                    printf("\n digite 1 para jogar uma peça: \n digite 2 para salvar \n\n ");
                    scanf("%d", &opcao);
                    printf("peças na mao do outro jogador %d ", indexJogador1);
                }
                switch (opcao)
                {
                    case 1:

                        do
                        {
                            printf("Digite os valores da peça desejada :\n");
                            imprimirPecas(jogador2, indexJogador2, "jogador2");
                            scanf("%d %d", &escolha2[0], &escolha2[1]);
                        }
                        while (!validarEscolha2(escolha2, jogador2, indexJogador2));
                        peca_escolhida2[0] = escolha2[0];
                        peca_escolhida2[1] = escolha2[1];
                        printf("[ %d | %d ]", peca_escolhida2[0], peca_escolhida2[1]);

                        if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2) && comparacaodireita(
                                ladodireito, quantidadedireita, peca_escolhida2))
                        {
                            printf(
                                    "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                            scanf("%d", &decisao);
                            if (decisao != 1 && decisao != 2)
                            {
                                while (decisao != 1 && decisao != 2)
                                {
                                    printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n\n");
                                    scanf("%d", &decisao);
                                }
                            }

                            if (decisao == 2)
                            {
                                printf("a peça foi adicionada no lado esquerdo \n\n");
                                quantidadeesquerda++;
                                ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[1];
                                ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[0];
                                removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                indexJogador2 = indexJogador2 - 1;
                                if(indexJogador2 == 0)
                                {
                                    printVitoria(2);
                                }
                            }
                            if (decisao == 1)
                            {
                                printf("a peça foi adicionada no lado direito \n\n");
                                quantidadedireita++;
                                ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                indexJogador2 = indexJogador2 - 1;
                                if(indexJogador2 == 0)
                                {
                                    printVitoria(2);
                                }
                            }
                        }
                        else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2))
                        {
                            printf("a peça foi adicionada no lado esquerdo \n\n");
                            quantidadeesquerda++;
                            ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[0];
                            ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[1];
                            removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                            indexJogador2 = indexJogador2 - 1;
                            if(indexJogador2 == 0)
                            {
                                printVitoria(2);
                            }
                        }
                        else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                        {
                            printf("a peça foi adicionada no lado direito \n\n");
                            quantidadedireita++;
                            ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                            ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                            removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                            indexJogador2 = indexJogador2 - 1;
                            if(indexJogador2 == 0)
                            {
                                printVitoria(2);
                            }
                        }
                        else
                        {
                            do
                            {
                                printf("essa peça nao encaixa em nenhum lado , compre uma da pilha .\n\n");

                                comprarPeca(pecasNaoDistribuidas, &indexpecasnaodistribuidas, jogador2, &indexJogador2);
                                imprimirPecas(jogador2, indexJogador2, "Jogador2");
                                do
                                {
                                    printf("Digite os valores da peça desejada :\n\n");
                                    imprimirPecas(jogador2, indexJogador2, "jogador2");
                                    scanf("%d %d", &escolha2[0], &escolha2[1]);
                                }
                                while (!validarEscolha2(escolha2, jogador2, indexJogador2));
                                peca_escolhida2[0] = escolha2[0];
                                peca_escolhida2[1] = escolha2[1];
                                printf("[ %d | %d ]", peca_escolhida2[0], peca_escolhida2[1]);


                                if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2) &&
                                    comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                                {
                                    printf(
                                            "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                                    scanf("%d", &decisao);
                                    if (decisao != 1 && decisao != 2)
                                    {
                                        while (decisao != 1 && decisao != 2)
                                        {
                                            printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !!\n\n ");
                                            scanf("%d", &decisao);
                                        }
                                    }
                                    if (decisao == 2)
                                    {
                                        printf("a peça foi adicionada no lado esquerdo \n\n");
                                        quantidadeesquerda++;
                                        ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[1];
                                        ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[0];
                                        removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                        indexJogador2 = indexJogador2 - 1;
                                        compradepeca = 0;
                                        if(indexJogador2 == 0)
                                        {
                                            printVitoria(2);
                                        }
                                    }
                                    if (decisao == 1)
                                    {
                                        printf("a peça foi adicionada no lado direito \n\n");
                                        quantidadedireita++;
                                        ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                        ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                        removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                        indexJogador2 = indexJogador2 - 1;
                                        compradepeca = 0;
                                        if(indexJogador2 == 0)
                                        {
                                            printVitoria(2);
                                        }
                                    }
                                }
                                else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2))
                                {
                                    printf("a peça foi adicionada no lado esquerdo \n\n");
                                    quantidadeesquerda++;
                                    ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[0];
                                    ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[1];
                                    removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                    indexJogador2 = indexJogador2 - 1;
                                    compradepeca = 0;
                                    if(indexJogador2 == 0)
                                    {
                                        printVitoria(2);
                                    }
                                }
                                else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                                {
                                    printf("a peça foi adicionada no lado direito \n\n");
                                    quantidadedireita++;
                                    ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                    ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                    removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                    indexJogador2 = indexJogador2 - 1;
                                    compradepeca = 0;
                                    if(indexJogador2 == 0)
                                    {
                                        printVitoria(2);
                                    }
                                }
                                else
                                {
                                    printf("infelizmente sua peça nao encaixa em nenhum canto :(  . \n\n");
                                    compradepeca = 1;
                                }
                            }
                            while (compradepeca != 0 && indexpecasnaodistribuidas != 0);
                        }
                        printf(" digite 1 para continuar o jogo e 2 para salvar \n\n ");
                        scanf("%d" , &salvamento);
                        while ( salvamento != 1 && salvamento != 2) {
                            printf("valor inadequado  , digite de novo");
                            scanf("%d", &salvamento);
                        }
                        if (salvamento == 2) {
                            turno = 2;
                            salvarjogo1();
                            exit(0);
                        }

                        break;



                    case 2: // salvar o jogo
                        turno = 2;
                        salvarjogo1();
                        exit(0);
                        break ;
                }
            }
            while (0 != indexJogador1 && 0 != indexJogador2);
        }
        else     // ELSE DO JOGADOR 1
        {
            printf("JOGADOR 1 , VOÇE COMEÇA!!!!!!!\n\n");
            do
            {
                printf("Digite os valores da peça desejada :\n\n");
                imprimirPecas(jogador1, indexJogador1, "jogador1");
                scanf("%d %d", &escolha1[0], &escolha1[1]);
            }
            while (!validarEscolha1(escolha1, jogador1, indexJogador1));
            peca_escolhida1[0] = escolha1[0];
            peca_escolhida1[1] = escolha1[1];
            printf("[ %d | %d ]", peca_escolhida1[0], peca_escolhida1[1]);
            ladoesquerdo[0][0] = peca_escolhida1[0];
            ladodireito[0][1] = peca_escolhida1[1];
            removerpeca1(jogador1, indexJogador1, peca_escolhida1);
            indexJogador1 = indexJogador1 - 1;
            if(indexJogador1 == 0)
            {
                printVitoria(1);
            }



            do
            {
                turnojogador2 :
                printf("RODADA DO JOGADOR 2 \n\n");
                imprimirPecas(jogador2, indexJogador2, "Jogador 2");
                imprimiraspecasdamesaesquerda(ladoesquerdo, quantidadeesquerda);
                imprimiraspecasdamesadireita(ladodireito, quantidadedireita);
                printf("\n\npeças na mao do oponente: %d", indexJogador1);
                while (opcao != 1 && opcao != 2)
                {
                    printf("\n digite 1 para jogar uma peça: \n digite 2 para salvar:  \n\n");
                    scanf("%d", &opcao);
                }
                switch (opcao)
                {
                    case 1:
                        do
                        {
                            printf("Digite os valores da peça desejada :\n");
                            imprimirPecas(jogador2, indexJogador2, "jogador2");
                            scanf("%d %d", &escolha2[0], &escolha2[1]);
                        }
                        while (!validarEscolha2(escolha2, jogador2, indexJogador2));
                        peca_escolhida2[0] = escolha2[0];
                        peca_escolhida2[1] = escolha2[1];
                        printf(" [ %d  |  %d  }", peca_escolhida2[0], peca_escolhida2[1]);

                        if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2) && comparacaodireita(
                                ladodireito, quantidadedireita, peca_escolhida2))
                        {
                            printf(
                                    "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                            scanf("%d", &decisao);
                            if (decisao != 1 && decisao != 2)
                            {
                                while (decisao != 1 && decisao != 2)
                                {
                                    printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !!\n\n ");
                                    scanf("%d", &decisao);
                                }
                            }
                            if (decisao == 2)
                            {
                                printf("a peça foi adicionada no lado esquerdo \n\n");
                                quantidadeesquerda++;
                                ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[1];
                                ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[0];
                                removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                indexJogador2 = indexJogador2 - 1;
                                if(indexJogador2 == 0)
                                {
                                    printVitoria(2);
                                }
                            }
                            if (decisao == 1)
                            {
                                printf("a peça foi adicionada no lado direito \n\n");
                                quantidadedireita++;
                                ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                indexJogador2 = indexJogador2 - 1;
                                if(indexJogador2 == 0)
                                {
                                    printVitoria(2);
                                }
                            }
                        }
                        else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2))
                        {
                            printf("a peça foi adicionada no lado esquerdo \n\n");
                            quantidadeesquerda++;
                            ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[0];
                            ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[1];
                            removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                            indexJogador2 = indexJogador2 - 1;
                            if(indexJogador2 == 0)
                            {
                                printVitoria(2);
                            }
                        }
                        else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                        {
                            printf("a peça foi adicionada no lado direito \n\n");
                            quantidadedireita++;
                            ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                            ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                            removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                            indexJogador2 = indexJogador2 - 1;
                            if(indexJogador2 == 0)
                            {
                                printVitoria(2);
                            }
                        }
                        else
                        {
                            do
                            {
                                printf("essa peça nao encaixa em nenhum lado , compre uma da pilha \n\n.");
                                comprarPeca(pecasNaoDistribuidas, &indexpecasnaodistribuidas, jogador2, &indexJogador2);
                                imprimirPecas(jogador2, indexJogador2, "Jogador2");
                                do
                                {
                                    printf("Digite os valores da peça desejada :\n\n");
                                    imprimirPecas(jogador2, indexJogador2, "jogador2");
                                    scanf("%d %d", &escolha2[0], &escolha2[1]);
                                }
                                while (!validarEscolha2(escolha2, jogador2, indexJogador2));
                                peca_escolhida2[0] = escolha2[0];
                                peca_escolhida2[1] = escolha2[1];
                                printf("[ %d | %d ]", peca_escolhida2[0], peca_escolhida2[1]);

                                if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2) &&
                                    comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                                {
                                    printf(
                                            "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                                    scanf("%d", &decisao);
                                    if (decisao != 1 && decisao != 2)
                                    {
                                        while (decisao != 1 && decisao != 2)
                                        {
                                            printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n\n");
                                            scanf("%d", &decisao);
                                        }
                                    }
                                    if (decisao == 2)
                                    {
                                        printf("a peça foi adicionada no lado esquerdo \n\n");
                                        quantidadeesquerda++;
                                        ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[1];
                                        ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[0];
                                        removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                        indexJogador2 = indexJogador2 - 1;
                                        compradepeca = 0;
                                        if(indexJogador2 == 0)
                                        {
                                            printVitoria(2);
                                        }
                                    }

                                    if (decisao == 1)
                                    {
                                        printf("a peça foi adicionada no lado direito \n\n");
                                        quantidadedireita++;
                                        ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                        ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                        removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                        indexJogador2 = indexJogador2 - 1;
                                        compradepeca = 0;
                                        if(indexJogador2 == 0)
                                        {
                                            printVitoria(2);
                                        }
                                    }
                                }
                                else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida2))
                                {
                                    printf("a peça foi adicionada no lado esquerdo \n\n");
                                    quantidadeesquerda++;
                                    ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida2[0];
                                    ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida2[1];
                                    removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                    indexJogador2 = indexJogador2 - 1;
                                    compradepeca = 0;
                                    if(indexJogador2 == 0)
                                    {
                                        printVitoria(2);
                                    }
                                }
                                else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida2))
                                {
                                    printf("a peça foi adicionada no lado direito \n\n");
                                    quantidadedireita++;
                                    ladodireito[quantidadedireita - 1][0] = peca_escolhida2[0];
                                    ladodireito[quantidadedireita - 1][1] = peca_escolhida2[1];
                                    removerpeca2(jogador2, indexJogador2, peca_escolhida2);

                                    indexJogador2 = indexJogador2 - 1;
                                    compradepeca = 0;
                                    if(indexJogador2 == 0)
                                    {
                                        printVitoria(2);
                                    }
                                }
                                else
                                {
                                    printf("infelizmente sua peça nao encaixa em nenhum canto :( .\n \n");
                                    compradepeca = 1;
                                }
                            }
                            while (compradepeca != 0 && indexpecasnaodistribuidas != 0);
                        }
                        printf(" digite 1 para continuar o jogo e 2 para salvar \n\n ");
                        scanf("%d" , &salvamento);
                        while ( salvamento != 1 && salvamento != 2) {
                            printf("valor inadequado  , digite de novo");
                            scanf("%d", &salvamento);
                        }
                        if (salvamento == 2) {
                            turno = 2;
                            salvarjogo1();
                            exit(0);
                        }


                        break ;


                    case 2:
                        turno = 2;
                        salvarjogo1();
                        exit(0);
                }


                printf("\n\nRODADA DO JOGADOR 1 \n\n");


                imprimirPecas(jogador1, indexJogador1, "jogador1");
                imprimiraspecasdamesaesquerda(ladoesquerdo, quantidadeesquerda);
                imprimiraspecasdamesadireita(ladodireito, quantidadedireita);
                printf("\n\npeças na mao do oponente: %d", indexJogador2);
                while (opcao != 1 && opcao != 2)
                {
                    printf("\n digite 1 para jogar uma peça: \n digite 2 para salvar: \n\n");
                    scanf("%d", &opcao);
                }
                switch (opcao)
                {
                    case 1:
                        do
                        {
                            printf("Digite os valores da peça desejada :\n\n");
                            imprimirPecas(jogador1, indexJogador1, "jogador1");
                            scanf("%d %d", &escolha1[0], &escolha1[1]);
                        }
                        while (!validarEscolha1(escolha1, jogador1, indexJogador1));
                        peca_escolhida1[0] = escolha1[0];
                        peca_escolhida1[1] = escolha1[1];


                        if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1) && comparacaodireita(
                                ladodireito, quantidadedireita, peca_escolhida1))
                        {
                            printf(
                                    "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                            scanf("%d", &decisao);
                            if (decisao != 1 && decisao != 2)
                            {
                                while (decisao != 1 && decisao != 2)
                                {
                                    printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n\n");
                                    scanf("%d", &decisao);
                                }
                            }
                            if (decisao == 2)
                            {
                                printf("a peça foi adicionada no lado esquerdo \n\n");
                                quantidadeesquerda++;
                                ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[1];
                                ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[0];
                                removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                indexJogador1 = indexJogador1 - 1;
                                if(indexJogador1 == 0)
                                {
                                    printVitoria(1);
                                }
                            }
                            if (decisao == 1)
                            {
                                printf("a peça foi adicionada no lado direito \n\n");
                                quantidadedireita++;
                                ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                indexJogador1 = indexJogador1 - 1;
                                if(indexJogador1 == 0)
                                {
                                    printVitoria(1);
                                }
                            }
                        }
                        else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1))
                        {
                            printf("a peça foi adicionada no lado esquerdo \n\n");
                            quantidadeesquerda++;
                            ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[0];
                            ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[1];
                            removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                            indexJogador1 = indexJogador1 - 1;
                            if(indexJogador1 == 0)
                            {
                                printVitoria(1);
                            }
                        }
                        else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                        {
                            printf("a peça foi adicionada no lado direito \n\n");
                            quantidadedireita++;
                            ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                            ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                            removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                            indexJogador1 = indexJogador1 - 1;
                            if(indexJogador1 == 0)
                            {
                                printVitoria(1);
                            }
                        }
                        else
                        {
                            do
                            {
                                printf("essa peça nao encaixa em nenhum lado , compre uma da pilha .\n\n");
                                comprarPeca(pecasNaoDistribuidas, &indexpecasnaodistribuidas, jogador1, &indexJogador1);
                                imprimirPecas(jogador2, indexJogador1, "Jogador1");
                                do
                                {
                                    printf("Digite os valores da peça desejada :\n");
                                    imprimirPecas(jogador1, indexJogador1, "jogador1");
                                    scanf("%d %d", &escolha1[0], &escolha1[1]);
                                }
                                while (!validarEscolha1(escolha1, jogador1, indexJogador1));
                                peca_escolhida1[0] = escolha1[0];
                                peca_escolhida1[1] = escolha1[1];


                                if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1) &&
                                    comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                                {
                                    printf(
                                            "a peça encaixa em ambos os lados , direito e esquerdo ! , selecione o lado desejado \n 1.lado direito , 2. lado esquerdo\n\n");
                                    scanf("%d", &decisao);
                                    if (decisao != 1 && decisao != 2)
                                    {
                                        while (decisao != 1 && decisao != 2)
                                        {
                                            printf("OPÇÃO INVÁLIDA , DIGITE a opção novamente !! \n\n");
                                            scanf("%d", &decisao);
                                        }
                                    }
                                    if (decisao == 2)
                                    {
                                        printf("a peça foi adicionada no lado esquerdo \n\n");
                                        quantidadeesquerda++;
                                        ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[1];
                                        ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[0];
                                        removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                        indexJogador1 = indexJogador1 - 1;
                                        compradepeca = 0;
                                        if(indexJogador1 == 0)
                                        {
                                            printVitoria(1);
                                        }
                                    }
                                    if (decisao == 1)
                                    {
                                        printf("a peça foi adicionada no lado direito \n\n");
                                        quantidadedireita++;
                                        ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                        ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                        removerpeca1(jogador1, indexJogador1, peca_escolhida1);

                                        indexJogador1 = indexJogador1 - 1;
                                        compradepeca = 0;
                                        if(indexJogador1 == 0)
                                        {
                                            printVitoria(1);
                                        }
                                    }
                                }
                                else if (comparacaoesquerda(ladoesquerdo, quantidadeesquerda, peca_escolhida1))
                                {
                                    printf("a peça foi adicionada no lado esquerdo \n\n");
                                    quantidadeesquerda++;
                                    ladoesquerdo[quantidadeesquerda - 1][0] = peca_escolhida1[0];
                                    ladoesquerdo[quantidadeesquerda - 1][1] = peca_escolhida1[1];
                                    removerpeca1(jogador1, indexJogador1, peca_escolhida1);


                                    indexJogador1 = indexJogador1 - 1;

                                    compradepeca = 0;
                                    if(indexJogador1 == 0)
                                    {
                                        printVitoria(1);
                                    }
                                }
                                else if (comparacaodireita(ladodireito, quantidadedireita, peca_escolhida1))
                                {
                                    printf("a peça foi adicionada no lado direito \n\n");
                                    quantidadedireita++;
                                    ladodireito[quantidadedireita - 1][0] = peca_escolhida1[0];
                                    ladodireito[quantidadedireita - 1][1] = peca_escolhida1[1];
                                    removerpeca1(jogador1, indexJogador1, peca_escolhida1);


                                    indexJogador1 = indexJogador1 - 1;
                                    compradepeca = 0;
                                    if(indexJogador1 == 0)
                                    {
                                        printVitoria(1);
                                    }
                                }
                                else
                                {
                                    printf("infelizmente sua peça nao encaixa em nenhum canto :( .\n\n  ");
                                    compradepeca = 1;
                                }
                            }
                            while (compradepeca != 0 && indexpecasnaodistribuidas != 0);
                        }
                        printf(" digite 1 para continuar o jogo e 2 para salvar \n\n ");
                        scanf("%d" , &salvamento);
                        while ( salvamento != 1 && salvamento != 2) {
                            printf("valor inadequado  , digite de novo");
                            scanf("%d", &salvamento);
                        }
                        if (salvamento == 2) {
                            turno = 1;
                            salvarjogo1();
                            exit(0);
                        }


                        break ;
                    case 2:
                        turno = 1;

                        salvarjogo1();
                        exit(0);
                        break ;
                }
            }
            while (0 != indexJogador1 && 0 != indexJogador2);
        }

        if (indexJogador1 == 0)
        {
            printf("\n--------VITÓRIA--------\n\n---Jogador 1 ganhou----\n");
        }
        if (indexJogador2 == 0)
        {
            printf("\n--------VITÓRIA--------\n\n---Jogador 2 ganhou----\n");
        }
        printf(
                "\n\n---------------------------\n>>>>>>> FIM DE JOGO <<<<<<<\n---------------------------\n\n.....retornando ao menu.....");
        return 0;
    }

    else
    {
        carregarjogo1();
        if (turno == 1)
        {
            goto turnojogador1;
        }
        if (turno == 2)


        {
            goto turnojogador2;
        }

        return 0;
    }
}














